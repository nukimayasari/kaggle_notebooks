{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[],"dockerImageVersionId":30786,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/nukimayasari/gdpr-compliance-of-google-play-scraper?scriptVersionId=211431239\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2024-12-05T18:03:43.311717Z","iopub.execute_input":"2024-12-05T18:03:43.312099Z","iopub.status.idle":"2024-12-05T18:03:43.319004Z","shell.execute_reply.started":"2024-12-05T18:03:43.31207Z","shell.execute_reply":"2024-12-05T18:03:43.317637Z"}},"outputs":[],"execution_count":8},{"cell_type":"markdown","source":"# **GDPR Compliance of Google Play Scraper**\n---\n\n### **Introduction**\n\nIn the age of data privacy, adhering to regulations like the General Data Protection Regulation (GDPR) is essential for any data-driven project. When working with data scraped from platforms such as Google Play, it is crucial to ensure that user privacy is respected and sensitive information is protected. Google Play data often contains user reviews, timestamps, app versions, and other potentially identifiable information that must be handled carefully.\n\nThis notebook demonstrates how to process Google Play data with GDPR compliance in mind. Specifically, it focuses on:\n- **Anonymizing sensitive data**: Hashing sensitive identifiers such as `reviewId` to prevent direct identification of users.\n- **Timestamp minimization**: Reducing timestamp granularity to the hour, which helps avoid tracking users at an individual level.\n- **Data encryption**: Storing sensitive mappings (between original and hashed IDs) in an encrypted format, ensuring that even if the data is accessed, it cannot be easily traced back to individuals.\n  \nBy following these steps, we ensure that data collected via a Google Play scraper is anonymized, secure, and compliant with GDPR standards, while still retaining analytical value.","metadata":{}},{"cell_type":"code","source":"!pip install google-play-scraper\n\nfrom google_play_scraper import reviews, Sort\n\nprint('All set')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-05T18:03:43.321157Z","iopub.execute_input":"2024-12-05T18:03:43.32153Z","iopub.status.idle":"2024-12-05T18:03:53.459129Z","shell.execute_reply.started":"2024-12-05T18:03:43.321495Z","shell.execute_reply":"2024-12-05T18:03:53.457771Z"}},"outputs":[{"name":"stdout","text":"Requirement already satisfied: google-play-scraper in /opt/conda/lib/python3.10/site-packages (1.2.7)\nAll set\n","output_type":"stream"}],"execution_count":9},{"cell_type":"markdown","source":"---\n### Scraping the Reviews  \nI used the `reviews` function to scrape the most recent reviews for the Duolingo app from Google Play. The parameters included:  \n- **`'com.spotify.music'`**: the app's package name.  \n- **`lang='en'`**: reviews in English.  \n- **`country='id'`**: reviews from the Indonesia store.  \n- **`sort=Sort.NEWEST`**: sorting the reviews by newest first.  \n- **`count=7000`**: limiting the result to 7000 reviews.  \n\nThe code snippet for this step is as follows:\n\n```python\nresult, continuation_token = reviews(\n    'com.spotify.music',\n    lang='en',\n    country='id',\n    sort=Sort.NEWEST,\n    count=7000\n)\n```\n---\n### Creating a DataFrame  \nI converted the scraped results into a DataFrame for better organization and easier manipulation.\n\n```python\ndf = pd.DataFrame(result)\ndf.head()\n```\n\nAt this stage, the DataFrame contains various columns, including review content, score, thumbs-up count, review date, and more. \n\n---","metadata":{}},{"cell_type":"code","source":"# Scraping Duolingo reviews\nresult, continuation_token = reviews(\n    'com.spotify.music',  # App package name\n    lang='eng',       # Language (e.g., 'en' for English, 'id' for Indonesian)\n    country='id',    # Country (e.g., 'us' for the United States, 'id' for Indonesia)\n    sort=Sort.NEWEST, # Sort order: NEWEST, RATING, or HELPFUL\n    count=7000         # Number of reviews to fetch\n)\n\n# Convert the result into a DataFrame\ndf = pd.DataFrame(result)\n\n# Display the first few rows\ndf.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-05T18:10:44.044031Z","iopub.execute_input":"2024-12-05T18:10:44.044868Z","iopub.status.idle":"2024-12-05T18:10:48.705711Z","shell.execute_reply.started":"2024-12-05T18:10:44.044828Z","shell.execute_reply":"2024-12-05T18:10:48.704444Z"}},"outputs":[{"execution_count":17,"output_type":"execute_result","data":{"text/plain":"                               reviewId       userName  \\\n0  8329b3db-da8f-435f-80e3-2f30433301ee  A Google user   \n1  7be43d8c-24da-43b5-83ec-a9cfae2b442b  A Google user   \n2  896948f5-2edc-4841-9b0e-122b40855afb  A Google user   \n3  5b70fdc1-df5b-4bb8-bc7d-68c18543fd9a  A Google user   \n4  903045ef-f6ab-4c92-8774-ad549f00d9d3  A Google user   \n\n                                           userImage  \\\n0  https://play-lh.googleusercontent.com/EGemoI2N...   \n1  https://play-lh.googleusercontent.com/EGemoI2N...   \n2  https://play-lh.googleusercontent.com/EGemoI2N...   \n3  https://play-lh.googleusercontent.com/EGemoI2N...   \n4  https://play-lh.googleusercontent.com/EGemoI2N...   \n\n                                             content  score  thumbsUpCount  \\\n0                    This is a really very good app.      5              0   \n1                                 I love you!!!!!!!!      5              0   \n2  The wrapped had me blushing thank you Spotify ...      5              2   \n3             Pa ja Raha hai ki have a lot going out      2              0   \n4        The other four stars requires 199â‚¹ monthly.      1              3   \n\n  reviewCreatedVersion                  at replyContent repliedAt  appVersion  \n0           8.9.96.476 2024-12-04 15:04:12         None       NaT  8.9.96.476  \n1                 None 2024-12-04 13:25:40         None       NaT        None  \n2           8.9.96.476 2024-12-04 12:17:07         None       NaT  8.9.96.476  \n3                 None 2024-12-04 08:47:46         None       NaT        None  \n4                 None 2024-12-04 08:42:18         None       NaT        None  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>reviewId</th>\n      <th>userName</th>\n      <th>userImage</th>\n      <th>content</th>\n      <th>score</th>\n      <th>thumbsUpCount</th>\n      <th>reviewCreatedVersion</th>\n      <th>at</th>\n      <th>replyContent</th>\n      <th>repliedAt</th>\n      <th>appVersion</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>8329b3db-da8f-435f-80e3-2f30433301ee</td>\n      <td>A Google user</td>\n      <td>https://play-lh.googleusercontent.com/EGemoI2N...</td>\n      <td>This is a really very good app.</td>\n      <td>5</td>\n      <td>0</td>\n      <td>8.9.96.476</td>\n      <td>2024-12-04 15:04:12</td>\n      <td>None</td>\n      <td>NaT</td>\n      <td>8.9.96.476</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>7be43d8c-24da-43b5-83ec-a9cfae2b442b</td>\n      <td>A Google user</td>\n      <td>https://play-lh.googleusercontent.com/EGemoI2N...</td>\n      <td>I love you!!!!!!!!</td>\n      <td>5</td>\n      <td>0</td>\n      <td>None</td>\n      <td>2024-12-04 13:25:40</td>\n      <td>None</td>\n      <td>NaT</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>896948f5-2edc-4841-9b0e-122b40855afb</td>\n      <td>A Google user</td>\n      <td>https://play-lh.googleusercontent.com/EGemoI2N...</td>\n      <td>The wrapped had me blushing thank you Spotify ...</td>\n      <td>5</td>\n      <td>2</td>\n      <td>8.9.96.476</td>\n      <td>2024-12-04 12:17:07</td>\n      <td>None</td>\n      <td>NaT</td>\n      <td>8.9.96.476</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>5b70fdc1-df5b-4bb8-bc7d-68c18543fd9a</td>\n      <td>A Google user</td>\n      <td>https://play-lh.googleusercontent.com/EGemoI2N...</td>\n      <td>Pa ja Raha hai ki have a lot going out</td>\n      <td>2</td>\n      <td>0</td>\n      <td>None</td>\n      <td>2024-12-04 08:47:46</td>\n      <td>None</td>\n      <td>NaT</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>903045ef-f6ab-4c92-8774-ad549f00d9d3</td>\n      <td>A Google user</td>\n      <td>https://play-lh.googleusercontent.com/EGemoI2N...</td>\n      <td>The other four stars requires 199â‚¹ monthly.</td>\n      <td>1</td>\n      <td>3</td>\n      <td>None</td>\n      <td>2024-12-04 08:42:18</td>\n      <td>None</td>\n      <td>NaT</td>\n      <td>None</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":17},{"cell_type":"code","source":"display(df.describe().T)\ndisplay(df.info())\ndisplay(df.shape)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-05T18:10:53.526818Z","iopub.execute_input":"2024-12-05T18:10:53.527179Z","iopub.status.idle":"2024-12-05T18:10:53.568549Z","shell.execute_reply.started":"2024-12-05T18:10:53.527149Z","shell.execute_reply":"2024-12-05T18:10:53.567176Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"                count                           mean                  min  \\\nscore          7000.0                       3.832571                  1.0   \nthumbsUpCount  7000.0                       4.458429                  0.0   \nat               7000  2024-11-20 13:46:20.118857472  2024-11-16 07:14:50   \nrepliedAt         568  2024-10-25 21:06:56.431337984  2020-07-15 08:12:15   \n\n                                      25%                         50%  \\\nscore                                 2.0                         5.0   \nthumbsUpCount                         0.0                         0.0   \nat                    2024-11-18 09:08:54  2024-11-20 12:45:18.500000   \nrepliedAt      2024-11-17 12:58:15.500000  2024-11-19 19:05:13.500000   \n\n                                         75%                  max       std  \nscore                                    5.0                  5.0  1.625793  \nthumbsUpCount                            0.0               6582.0  97.07839  \nat             2024-11-22 17:17:50.750000128  2024-12-04 15:04:12       NaN  \nrepliedAt      2024-11-21 21:10:57.750000128  2024-11-25 05:36:53       NaN  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>count</th>\n      <th>mean</th>\n      <th>min</th>\n      <th>25%</th>\n      <th>50%</th>\n      <th>75%</th>\n      <th>max</th>\n      <th>std</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>score</th>\n      <td>7000.0</td>\n      <td>3.832571</td>\n      <td>1.0</td>\n      <td>2.0</td>\n      <td>5.0</td>\n      <td>5.0</td>\n      <td>5.0</td>\n      <td>1.625793</td>\n    </tr>\n    <tr>\n      <th>thumbsUpCount</th>\n      <td>7000.0</td>\n      <td>4.458429</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>6582.0</td>\n      <td>97.07839</td>\n    </tr>\n    <tr>\n      <th>at</th>\n      <td>7000</td>\n      <td>2024-11-20 13:46:20.118857472</td>\n      <td>2024-11-16 07:14:50</td>\n      <td>2024-11-18 09:08:54</td>\n      <td>2024-11-20 12:45:18.500000</td>\n      <td>2024-11-22 17:17:50.750000128</td>\n      <td>2024-12-04 15:04:12</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>repliedAt</th>\n      <td>568</td>\n      <td>2024-10-25 21:06:56.431337984</td>\n      <td>2020-07-15 08:12:15</td>\n      <td>2024-11-17 12:58:15.500000</td>\n      <td>2024-11-19 19:05:13.500000</td>\n      <td>2024-11-21 21:10:57.750000128</td>\n      <td>2024-11-25 05:36:53</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}},{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 7000 entries, 0 to 6999\nData columns (total 11 columns):\n #   Column                Non-Null Count  Dtype         \n---  ------                --------------  -----         \n 0   reviewId              7000 non-null   object        \n 1   userName              7000 non-null   object        \n 2   userImage             7000 non-null   object        \n 3   content               7000 non-null   object        \n 4   score                 7000 non-null   int64         \n 5   thumbsUpCount         7000 non-null   int64         \n 6   reviewCreatedVersion  5707 non-null   object        \n 7   at                    7000 non-null   datetime64[ns]\n 8   replyContent          568 non-null    object        \n 9   repliedAt             568 non-null    datetime64[ns]\n 10  appVersion            5707 non-null   object        \ndtypes: datetime64[ns](2), int64(2), object(7)\nmemory usage: 601.7+ KB\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"None"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"(7000, 11)"},"metadata":{}}],"execution_count":18},{"cell_type":"code","source":"print(df.columns)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-05T18:10:56.880654Z","iopub.execute_input":"2024-12-05T18:10:56.881012Z","iopub.status.idle":"2024-12-05T18:10:56.886981Z","shell.execute_reply.started":"2024-12-05T18:10:56.880985Z","shell.execute_reply":"2024-12-05T18:10:56.885852Z"}},"outputs":[{"name":"stdout","text":"Index(['reviewId', 'userName', 'userImage', 'content', 'score',\n       'thumbsUpCount', 'reviewCreatedVersion', 'at', 'replyContent',\n       'repliedAt', 'appVersion'],\n      dtype='object')\n","output_type":"stream"}],"execution_count":19},{"cell_type":"markdown","source":"---\n### **1. Understand the Problem:**\nWhen working with user data like `reviewId`, we need to anonymize or pseudonymize sensitive information to comply with GDPR. This ensures users cannot be easily identified if the dataset is leaked or accessed without authorization. Since the `userId` column is already anonymized, we can omit it from this process. \n\nKey tasks:\n1. **Remove unnecessary sensitive columns** like `userImage`.\n2. **Replace sensitive identifiers** like `reviewId` with hashed versions.\n3. **Secure the mapping** between hashed and original IDs for internal use only.\n\n---\n\n### **2. Code Implementation: Step-by-Step**\n\n#### **Step 2.1: Copy the Original DataFrame**\n```python\ndf1 = df.copy()\n```\n- Always work on a copy of your dataset (`df1`) to avoid unintended changes to the original data.\n\n\n\n#### **Step 2.2: Remove Unnecessary Columns**\n```python\nif 'userImage' in df1.columns:\n    df1 = df1.drop('userImage', axis=1)\n```\n- If a column (`userImage`) is not required for analysis, remove it immediately. Keeping unnecessary sensitive data increases the risk of exposure.\n\n\n\n#### **Step 2.3: Hash Sensitive Identifiers**\n```python\nif 'reviewId' in df1.columns:\n    df1['hashedReviewId'] = df1['reviewId'].apply(lambda x: hashlib.sha256(x.encode()).hexdigest())\n    df1 = df1.drop('reviewId', axis=1)\n```\n- **Why Hashing?**: \n  - `reviewId` uniquely identifies users, so we replace it with a cryptographic hash (SHA-256) to anonymize the data.\n  - Hashing ensures that even if someone accesses the hashed values, they cannot reverse-engineer the original IDs without significant effort.\n- **Drop the Original Column**: After creating the `hashedReviewId`, we immediately remove `reviewId` to avoid leaving sensitive data in the dataset.\n\n---","metadata":{}},{"cell_type":"code","source":"import hashlib\n\n# Start with the original DataFrame\ndf1 = df.copy()\n\n# Drop the 'userImage' column from df1\nif 'userImage' in df1.columns:\n    df1 = df1.drop('userImage', axis=1)\n\n# Add a hashed 'reviewId' column to df1\nif 'reviewId' in df1.columns:\n    df1['hashedReviewId'] = df1['reviewId'].apply(lambda x: hashlib.sha256(x.encode()).hexdigest())\n    # Drop the original 'reviewId' column\n    df1 = df1.drop('reviewId', axis=1)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-05T18:23:24.37704Z","iopub.execute_input":"2024-12-05T18:23:24.377865Z","iopub.status.idle":"2024-12-05T18:23:24.402199Z","shell.execute_reply.started":"2024-12-05T18:23:24.377821Z","shell.execute_reply":"2024-12-05T18:23:24.400988Z"}},"outputs":[],"execution_count":25},{"cell_type":"markdown","source":"---\n#### **Step 2.4: Standardize Timestamp Columns**\n```python\ndf1['at'] = pd.to_datetime(df1['at'])\ndf1['at_hour'] = df1['at'].dt.floor('H')\ndf1 = df1.drop('at', axis=1)\n```\n- Convert timestamp data (`at`) to a standard datetime format.\n- Round timestamps to the hour (`at_hour`) to reduce granularity while retaining analytical value. Fine-grained timestamps may allow tracking individual users' activities, which could breach GDPR.\n- Drop the original `at` column after conversion.\n\n---","metadata":{}},{"cell_type":"code","source":"# Convert timestamp to datetime (if not already)\ndf1['at'] = pd.to_datetime(df1['at'])\n\n# Option 1: Keep only the hour\ndf1['at_hour'] = df1['at'].dt.floor('H')\n\n# Drop the original detailed timestamp\ndf1 = df1.drop('at', axis=1)\n\ndf1.head()\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-05T18:23:29.050586Z","iopub.execute_input":"2024-12-05T18:23:29.050961Z","iopub.status.idle":"2024-12-05T18:23:29.078877Z","shell.execute_reply.started":"2024-12-05T18:23:29.050931Z","shell.execute_reply":"2024-12-05T18:23:29.077723Z"}},"outputs":[{"name":"stderr","text":"/tmp/ipykernel_30/435572244.py:5: FutureWarning: 'H' is deprecated and will be removed in a future version, please use 'h' instead.\n  df1['at_hour'] = df1['at'].dt.floor('H')\n","output_type":"stream"},{"execution_count":26,"output_type":"execute_result","data":{"text/plain":"        userName                                            content  score  \\\n0  A Google user                    This is a really very good app.      5   \n1  A Google user                                 I love you!!!!!!!!      5   \n2  A Google user  The wrapped had me blushing thank you Spotify ...      5   \n3  A Google user             Pa ja Raha hai ki have a lot going out      2   \n4  A Google user        The other four stars requires 199â‚¹ monthly.      1   \n\n   thumbsUpCount reviewCreatedVersion replyContent repliedAt  appVersion  \\\n0              0           8.9.96.476         None       NaT  8.9.96.476   \n1              0                 None         None       NaT        None   \n2              2           8.9.96.476         None       NaT  8.9.96.476   \n3              0                 None         None       NaT        None   \n4              3                 None         None       NaT        None   \n\n                                      hashedReviewId             at_hour  \n0  66e980ec7c5aa7613289a6cd69f697d3a90ff1a0d93132... 2024-12-04 15:00:00  \n1  8025aff28fac9ca37d8022516e76c767cbb7ff966a5e2c... 2024-12-04 13:00:00  \n2  aff1d5ea657e5d54e14a13f6e2cc2ffbdf342719bbbc1d... 2024-12-04 12:00:00  \n3  5510a7b71c850daad47fd533f233d55324bc4c487bf9d7... 2024-12-04 08:00:00  \n4  8368206fb764817d4b6fb86c9b8a0c2af907ef4fcfac63... 2024-12-04 08:00:00  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>userName</th>\n      <th>content</th>\n      <th>score</th>\n      <th>thumbsUpCount</th>\n      <th>reviewCreatedVersion</th>\n      <th>replyContent</th>\n      <th>repliedAt</th>\n      <th>appVersion</th>\n      <th>hashedReviewId</th>\n      <th>at_hour</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>A Google user</td>\n      <td>This is a really very good app.</td>\n      <td>5</td>\n      <td>0</td>\n      <td>8.9.96.476</td>\n      <td>None</td>\n      <td>NaT</td>\n      <td>8.9.96.476</td>\n      <td>66e980ec7c5aa7613289a6cd69f697d3a90ff1a0d93132...</td>\n      <td>2024-12-04 15:00:00</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>A Google user</td>\n      <td>I love you!!!!!!!!</td>\n      <td>5</td>\n      <td>0</td>\n      <td>None</td>\n      <td>None</td>\n      <td>NaT</td>\n      <td>None</td>\n      <td>8025aff28fac9ca37d8022516e76c767cbb7ff966a5e2c...</td>\n      <td>2024-12-04 13:00:00</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>A Google user</td>\n      <td>The wrapped had me blushing thank you Spotify ...</td>\n      <td>5</td>\n      <td>2</td>\n      <td>8.9.96.476</td>\n      <td>None</td>\n      <td>NaT</td>\n      <td>8.9.96.476</td>\n      <td>aff1d5ea657e5d54e14a13f6e2cc2ffbdf342719bbbc1d...</td>\n      <td>2024-12-04 12:00:00</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>A Google user</td>\n      <td>Pa ja Raha hai ki have a lot going out</td>\n      <td>2</td>\n      <td>0</td>\n      <td>None</td>\n      <td>None</td>\n      <td>NaT</td>\n      <td>None</td>\n      <td>5510a7b71c850daad47fd533f233d55324bc4c487bf9d7...</td>\n      <td>2024-12-04 08:00:00</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>A Google user</td>\n      <td>The other four stars requires 199â‚¹ monthly.</td>\n      <td>1</td>\n      <td>3</td>\n      <td>None</td>\n      <td>None</td>\n      <td>NaT</td>\n      <td>None</td>\n      <td>8368206fb764817d4b6fb86c9b8a0c2af907ef4fcfac63...</td>\n      <td>2024-12-04 08:00:00</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":26},{"cell_type":"markdown","source":"---\n#### **Step 2.5: Save a Secure Mapping of Original and Hashed IDs**\n```python\nmapping_df = df[['reviewId']].copy()\nmapping_df['hashedReviewId'] = mapping_df['reviewId'].apply(lambda x: hashlib.sha256(x.encode()).hexdigest())\nmapping_df.to_csv('hashed_mapping.csv', index=False)\n```\n- **Why Keep a Mapping?**:\n  - If needed (e.g., debugging or user requests), you can trace back hashed values to the original IDs.\n  - Save the mapping in a separate CSV file for internal use only.\n \n---","metadata":{}},{"cell_type":"code","source":"# Save the mapping to a separate DataFrame\nmapping_df = df[['reviewId']].copy()\nmapping_df['hashedReviewId'] = mapping_df['reviewId'].apply(lambda x: hashlib.sha256(x.encode()).hexdigest())\n\n# Save the mapping to a secure file (CSV or encrypted format)\nmapping_df.to_csv('hashed_mapping.csv', index=False)  # Or save in an encrypted format for added security","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-05T18:24:39.245033Z","iopub.execute_input":"2024-12-05T18:24:39.245416Z","iopub.status.idle":"2024-12-05T18:24:39.292526Z","shell.execute_reply.started":"2024-12-05T18:24:39.245385Z","shell.execute_reply":"2024-12-05T18:24:39.291574Z"}},"outputs":[],"execution_count":28},{"cell_type":"markdown","source":"---\n#### **Step 2.6: Encrypt the Mapping File**\n1. **Generate an Encryption Key**:\n   ```python\n   key = Fernet.generate_key()\n   cipher_suite = Fernet(key)\n   ```\n   - Use the `cryptography` library to generate a secure encryption key. This key is essential for decrypting the file later.\n  \n\n2. **Encrypt the Mapping File**:\n   ```python\n   with open('hashed_mapping.csv', 'rb') as file:\n       original_data = file.read()\n   encrypted_data = cipher_suite.encrypt(original_data)\n   with open('hashed_mapping_encrypted.csv', 'wb') as encrypted_file:\n       encrypted_file.write(encrypted_data)\n   ```\n   - Read the `hashed_mapping.csv` file, encrypt its content, and save it as `hashed_mapping_encrypted.csv`.\n\n---","metadata":{}},{"cell_type":"code","source":"from cryptography.fernet import Fernet\n\n# Generate a key (store this key securely for decryption later)\nkey = Fernet.generate_key()\ncipher_suite = Fernet(key)\n\n# Read the mapping file\nwith open('hashed_mapping.csv', 'rb') as file:\n    original_data = file.read()\n\n# Encrypt the file\nencrypted_data = cipher_suite.encrypt(original_data)\n\n# Save the encrypted file\nwith open('hashed_mapping_encrypted.csv', 'wb') as encrypted_file:\n    encrypted_file.write(encrypted_data)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-05T18:24:54.611877Z","iopub.execute_input":"2024-12-05T18:24:54.612245Z","iopub.status.idle":"2024-12-05T18:24:54.78239Z","shell.execute_reply.started":"2024-12-05T18:24:54.612215Z","shell.execute_reply":"2024-12-05T18:24:54.78124Z"}},"outputs":[],"execution_count":29},{"cell_type":"markdown","source":"---\n3. **Save the Encryption Key Securely**:\n   ```python\n   with open('encryption_key.key', 'wb') as key_file:\n       key_file.write(key)\n   ```\n   - Store the key in a separate file (`encryption_key.key`) and move it to a secure location. Keep this key confidential.\n\n---","metadata":{}},{"cell_type":"code","source":"with open('encryption_key.key', 'wb') as key_file:\n    key_file.write(key)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-05T18:33:38.006416Z","iopub.execute_input":"2024-12-05T18:33:38.007Z","iopub.status.idle":"2024-12-05T18:33:38.013065Z","shell.execute_reply.started":"2024-12-05T18:33:38.006966Z","shell.execute_reply":"2024-12-05T18:33:38.011908Z"}},"outputs":[],"execution_count":30},{"cell_type":"markdown","source":"---\n4. **Delete the Plaintext Mapping File**:\n   ```bash\n   rm hashed_mapping.csv  # Linux/Mac\n   del hashed_mapping.csv  # Windows\n   ```\n   - After encryption, delete the plaintext `hashed_mapping.csv` to avoid accidental leaks.\n\n---","metadata":{}},{"cell_type":"markdown","source":"#### **Step 2.7: Decrypt the Mapping File When Needed**\nIf you need to access the original mapping, use the following decryption process:\n1. Load the encryption key:\n   ```python\n   with open('encryption_key.key', 'rb') as key_file:\n       key = key_file.read()\n   cipher_suite = Fernet(key)\n   ```\n2. Read and decrypt the file:\n   ```python\n   with open('hashed_mapping_encrypted.csv', 'rb') as encrypted_file:\n       encrypted_data = encrypted_file.read()\n   decrypted_data = cipher_suite.decrypt(encrypted_data)\n   ```\n3. Save the decrypted content (if necessary):\n   ```python\n   with open('decrypted_mapping.csv', 'wb') as decrypted_file:\n       decrypted_file.write(decrypted_data)\n   ```\n\n---","metadata":{}},{"cell_type":"code","source":"from cryptography.fernet import Fernet\n\n# Load the encryption key\nwith open('encryption_key.key', 'rb') as key_file:\n    key = key_file.read()\n\ncipher_suite = Fernet(key)\n\n# Read the encrypted file\nwith open('hashed_mapping_encrypted.csv', 'rb') as encrypted_file:\n    encrypted_data = encrypted_file.read()\n\n# Decrypt the file\ndecrypted_data = cipher_suite.decrypt(encrypted_data)\n\n# Save the decrypted data back to a file (if needed)\nwith open('decrypted_mapping.csv', 'wb') as decrypted_file:\n    decrypted_file.write(decrypted_data)\n","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"---\n### **3. Compliance Review**\nBy following these steps:\n1. **All sensitive identifiers (e.g., `reviewId`) are anonymized** using hashing.\n2. **Detailed timestamps are replaced with less granular values (hour-level)**.\n3. **Mappings are securely stored and encrypted**.\n4. **Plaintext mappings are deleted after encryption**.\n\nThese practices align with GDPRâ€™s principles of data minimization and security, ensuring user data is protected while retaining analytical usefulness.\n\n---\n\n### **4. What to Document**\n- The purpose and steps of hashing.\n- Encryption key location and access protocol.\n- Procedures for securely decrypting data when necessary.\n---","metadata":{}},{"cell_type":"markdown","source":"# **Conclusion**\n\nIn this notebook, we have walked through the process of making data scraped from Google Play compliant with GDPR. Key steps include:\n1. **Hashing sensitive identifiers** like `reviewId` to anonymize user data.\n2. **Minimizing timestamp detail** to prevent individual user activity tracking.\n3. **Encrypting sensitive mappings** between original and hashed data to ensure secure storage.\n\nBy following these procedures, we mitigate the risks associated with processing personal data and comply with GDPR's requirements on data minimization, security, and user privacy. With these practices in place, you can confidently analyze Google Play data without compromising user privacy. \n\nThis approach not only helps you adhere to legal and ethical standards but also demonstrates a commitment to responsible data science practices. As data privacy continues to be a critical issue, such measures will remain vital for future projects.\n\n---","metadata":{}}]}